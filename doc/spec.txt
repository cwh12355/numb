operator predecence (high to low):

    *  /  <<  >>  and  mod
    +  -  or  xor

grammar:

    root → root `as` fmt
    root → root `to` unit
    root → expr

    expr → expr op expr
    expr → expr unit
    expr → `+` | `-` expr
    expr → `(` expr `)`
    expr → num
    expr → var
    expr → var `=` expr

    op   → `+` | `-` | `*` ...
    fmt  → `dec` | `hex` | `oct` | `bin`
    num  → ???
    unit → ???
