`numb` is an arbitrary precision calculator language with support for unit conversion & date handling. It comes with built-in list of units of measurements, constants and common math functions.

TYPES

    There are 3 basic elements in `numb`: numbers, units & times.

    `Number` is an arbitrary precision rational number. The numbers are stored with the numerical system representation (decimal, octal etc.). Numbers can be declared in various notations:

        * decimal         123
        * hexadecimal     0xDEADBEEF
        * octal           0o123
        * binary          0b1010
        * scientific      1.2e3

    `Unit` is a number with the unit standard for measurement. `numb` includes SI, Customary and few historical measurement units. Units can be resolved with SI & digital prefixes. If the exact unit name is not found, `numb` will search the name by ignoring plural suffixes 's', 'es' & 'ies' or using case-insensitive comparison.

    `Time` is a timestamp with nanosecond precision and representation format. All time instances have (local by default) time zone information. On Unix systems, it consults TZ environment variable or /etc/localtime to determine the local timezone.
    Time are declared as a formatted string within `{` and `}`. The supported formats are:

        {YYYY-MM-DD}
        {DD-MM-YYYY}
        {YYYY-MM-DDTHH:MM}
        {YYYY-MM-DD HH:MM}

    '-', '/', '.' or ' ' (empty space) can be used as day/month/year separators. Days/months don't have to be zero-padded. Month can be either a number (1-12) or short/long name (for ex.: Jan, January).

    Certain words are resolved to time instances during runtime:

        now  time  date  today  tomorrow  yesterday

EXPRESSIONS

    Everything in `numb` is an expression.

    Numbers support all the arithmetic and logical operations (see OPERATORS).

        > 0b1001 << 1 + 0xFF in hex

    Units can only be added/subtracted/multiplied/divided with other units, and multiplied/divided/exponentiated with numbers.

        + - * /   (unit)
        * / ^     (numbers)

        > 10 kmph * 5 hours
        > m^2

    Time can only be subtracted from other time, and added to or subtracted from time units.

        > {2022/01/01} - {2020/01/01} to days
        > now - 1 day
        > now + 1 hour

    All types can be stored in variables. The syntax is a name followed by `=` and an expression. For ex.:

        > total = 10 + 20

    Units can be declared from units or numbers. To create one, `:` is used:

        > metricton : 1000 kg
        > rad : 1

    All 3 types support a special operator `in`, which changes the representation of the value. For numbers/units, these are:

        dec   | decimal
        hex   | hexadecimal
        oct   | octal
        bin   | binary
        rat   | rational (x/y)
        sci   | scientific (-1.23e+45)

    For time, it's the TZ database name, full or partial:

        > time in newyork
        > time in New_York
        > time in America/New_York

OPERATORS

    +     addition
    -     subtraction / negation
    *     multiplication
    /     division
    mod   modulo
    ^     exponent

    <<    shift left
    >>    shift right
    and   bitwise and
    or    bitwise or
    xor   bitwise xor

    =     assign (variable)
    :     assign (unit)

    in    format number
    to    unit conversion

    The operator precedence (highest to lowest):
        ^
        *  /  <<  >>  and  mod
        +  -  or  xor
        in to
        =  :
